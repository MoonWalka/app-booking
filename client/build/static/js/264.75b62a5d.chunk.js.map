{"version":3,"file":"static/js/264.75b62a5d.chunk.js","mappings":"kLAIA,MA8HA,EA9H0BA,IAAmB,IAAlB,SAAEC,GAAUD,EACrC,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CACjCC,cAAe,EACfC,iBAAkB,EAClBC,aAAc,EACdC,kBAAmB,KAGrBC,EAAAA,EAAAA,YAAU,KACR,GAAIR,GAAYA,EAASS,OAAS,EAAG,CAEnC,MAAMC,EAAM,IAAIC,KACVC,EAAWZ,EAASa,QAAOC,GACX,IAAIH,KAAKG,EAAQC,MAChBL,IAGjBM,EAAUhB,EAASiB,QAAO,CAACC,EAAOJ,IAC/BI,GAASC,WAAWL,EAAQM,SAAW,IAC7C,GAEGC,EAAarB,EAASiB,QAAO,CAACC,EAAOJ,IAClCI,GAASI,SAASR,EAAQO,aAAe,IAC/C,GAEHnB,EAAS,CACPE,cAAeJ,EAASS,OACxBJ,iBAAkBO,EAASH,OAC3BH,aAAcU,EACdT,kBAAmBP,EAASS,OAAS,EAAIc,KAAKC,MAAMH,EAAarB,EAASS,QAAU,GAExF,IACC,CAACT,IAGJ,MAAMyB,EAAkBL,GACf,IAAIM,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAASC,OAAOV,GAGvF,OACEW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAC,kCAEhCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAACC,EAAAA,IAAa,OAEhBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,aAAYC,SAAEhC,EAAMG,uBAIrC2B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAACC,EAAAA,IAAa,OAEhBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,aAAYC,SAAEhC,EAAMI,0BAIrC0B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAACE,EAAAA,IAAe,OAElBL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,aAAYC,SAAER,EAAexB,EAAMK,uBAIpDyB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,KAACG,EAAAA,IAAO,OAEVN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,aAAYC,SAAEhC,EAAMM,8BAKvCwB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACvCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,iBAAgBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGjC,GAAYA,EAASS,OAAS,EAC7BT,EAASsC,MAAM,EAAG,GAAGC,KAAI,CAACzB,EAAS0B,KACjCT,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKnB,EAAQ2B,QAAU,qBACvBP,EAAAA,EAAAA,KAAA,MAAAD,SAAKnB,EAAQ4B,OAAS,6BACtBR,EAAAA,EAAAA,KAAA,MAAAD,SAAKnB,EAAQC,MAAQ,8BACrBmB,EAAAA,EAAAA,KAAA,MAAAD,SAAKR,EAAeN,WAAWL,EAAQM,SAAW,MAClDc,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAW,gBAAgBlB,EAAQ6B,QAAU,YAAYV,SAC5DnB,EAAQ6B,QAAU,mBAPhBH,MAaXN,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIU,QAAQ,IAAIZ,UAAU,UAASC,SAAC,0CAO5C,C","sources":["components/concerts/ConcertsDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FaCalendarAlt, FaUsers, FaMoneyBillWave, FaChartLine } from 'react-icons/fa';\n\n\nconst ConcertsDashboard = ({ concerts }) => {\n  const [stats, setStats] = useState({\n    totalConcerts: 0,\n    upcomingConcerts: 0,\n    totalRevenue: 0,\n    averageAttendance: 0\n  });\n\n  useEffect(() => {\n    if (concerts && concerts.length > 0) {\n      // Calculer les statistiques\n      const now = new Date();\n      const upcoming = concerts.filter(concert => {\n        const concertDate = new Date(concert.date);\n        return concertDate > now;\n      });\n      \n      const revenue = concerts.reduce((total, concert) => {\n        return total + (parseFloat(concert.amount) || 0);\n      }, 0);\n      \n      const attendance = concerts.reduce((total, concert) => {\n        return total + (parseInt(concert.attendance) || 0);\n      }, 0);\n      \n      setStats({\n        totalConcerts: concerts.length,\n        upcomingConcerts: upcoming.length,\n        totalRevenue: revenue,\n        averageAttendance: concerts.length > 0 ? Math.round(attendance / concerts.length) : 0\n      });\n    }\n  }, [concerts]);\n\n  // Fonction pour formater les montants en euros\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(amount);\n  };\n\n  return (\n    <div className=\"concerts-dashboard\">\n      <h2 className=\"dashboard-title\">Tableau de bord des concerts</h2>\n      \n      <div className=\"stats-container\">\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">\n            <FaCalendarAlt />\n          </div>\n          <div className=\"stat-content\">\n            <h3>Concerts totaux</h3>\n            <p className=\"stat-value\">{stats.totalConcerts}</p>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">\n            <FaCalendarAlt />\n          </div>\n          <div className=\"stat-content\">\n            <h3>Concerts à venir</h3>\n            <p className=\"stat-value\">{stats.upcomingConcerts}</p>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">\n            <FaMoneyBillWave />\n          </div>\n          <div className=\"stat-content\">\n            <h3>Revenus totaux</h3>\n            <p className=\"stat-value\">{formatCurrency(stats.totalRevenue)}</p>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">\n            <FaUsers />\n          </div>\n          <div className=\"stat-content\">\n            <h3>Audience moyenne</h3>\n            <p className=\"stat-value\">{stats.averageAttendance}</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"recent-concerts\">\n        <h3>Concerts récents</h3>\n        <div className=\"concerts-table-container\">\n          <table className=\"concerts-table\">\n            <thead>\n              <tr>\n                <th>Artiste</th>\n                <th>Lieu</th>\n                <th>Date</th>\n                <th>Montant</th>\n                <th>Statut</th>\n              </tr>\n            </thead>\n            <tbody>\n              {concerts && concerts.length > 0 ? (\n                concerts.slice(0, 5).map((concert, index) => (\n                  <tr key={index}>\n                    <td>{concert.artist || 'Artiste inconnu'}</td>\n                    <td>{concert.venue || 'Lieu non spécifié'}</td>\n                    <td>{concert.date || 'Date non spécifiée'}</td>\n                    <td>{formatCurrency(parseFloat(concert.amount) || 0)}</td>\n                    <td>\n                      <span className={`status-badge ${concert.status || 'pending'}`}>\n                        {concert.status || 'En attente'}\n                      </span>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"5\" className=\"no-data\">Aucun concert trouvé</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConcertsDashboard;\n"],"names":["_ref","concerts","stats","setStats","useState","totalConcerts","upcomingConcerts","totalRevenue","averageAttendance","useEffect","length","now","Date","upcoming","filter","concert","date","revenue","reduce","total","parseFloat","amount","attendance","parseInt","Math","round","formatCurrency","Intl","NumberFormat","style","currency","format","_jsxs","className","children","_jsx","FaCalendarAlt","FaMoneyBillWave","FaUsers","slice","map","index","artist","venue","status","colSpan"],"sourceRoot":""}