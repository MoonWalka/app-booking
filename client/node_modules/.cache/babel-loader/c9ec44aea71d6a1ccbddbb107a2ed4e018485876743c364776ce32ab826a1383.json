{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./ComparisonTable.css';/**\n * Composant de tableau comparatif pour comparer et intégrer les données du formulaire\n * avec les données existantes du programmateur\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ComparisonTable=_ref=>{let{formData,programmerData,onSave,onCancel}=_ref;// État pour stocker les valeurs sélectionnées\nconst[selectedValues,setSelectedValues]=useState({});// Initialiser les valeurs sélectionnées avec les valeurs du programmateur\nuseEffect(()=>{if(programmerData){const initialValues={};// Pour chaque champ du programmateur, utiliser sa valeur comme valeur initiale\nObject.keys(programmerData).forEach(key=>{if(key!=='id'&&key!=='submittedAt'&&key!=='status'&&key!=='processedAt'&&key!=='commonToken'&&key!=='formLinkId'){initialValues[key]=programmerData[key]||'';}});setSelectedValues(initialValues);console.log('ComparisonTable - Valeurs initiales chargées:',initialValues);}},[programmerData]);// Gérer le clic sur une flèche pour copier une valeur\nconst handleCopyValue=(field,value)=>{setSelectedValues(prev=>({...prev,[field]:value}));console.log(`ComparisonTable - Valeur copiée pour le champ ${field}:`,value);};// Gérer la modification manuelle d'une valeur\nconst handleChange=(field,value)=>{setSelectedValues(prev=>({...prev,[field]:value}));};// Gérer la sauvegarde des valeurs sélectionnées\nconst handleSave=()=>{// Conserver le token commun et l'ID du formulaire\nconst updatedData={...selectedValues,commonToken:formData.commonToken,formLinkId:formData.formLinkId};console.log('ComparisonTable - Données finales à sauvegarder:',updatedData);onSave(updatedData);};// Définir les champs à comparer et leur libellé\nconst fieldDefinitions=[{key:'businessName',label:'Raison sociale'},{key:'firstName',label:'Prénom'},{key:'lastName',label:'Nom'},{key:'role',label:'Qualité'},{key:'address',label:'Adresse'},{key:'venue',label:'Lieu ou festival'},{key:'venueAddress',label:'Adresse du lieu'},{key:'vatNumber',label:'Numéro intracommunautaire'},{key:'siret',label:'Siret'},{key:'email',label:'Email'},{key:'phone',label:'Téléphone'},{key:'website',label:'Site web'}];return/*#__PURE__*/_jsxs(\"div\",{className:\"comparison-table-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Comparaison et int\\xE9gration des donn\\xE9es\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Comparez les donn\\xE9es du formulaire avec les donn\\xE9es existantes et choisissez les valeurs \\xE0 conserver.\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"comparison-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Champ\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Valeur existante\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Valeur du formulaire\"}),/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{children:\"Valeur finale\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:fieldDefinitions.map(field=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"field-label\",children:field.label}),/*#__PURE__*/_jsx(\"td\",{className:\"existing-value\",children:programmerData&&programmerData[field.key]?programmerData[field.key]:'-'}),/*#__PURE__*/_jsx(\"td\",{className:\"form-value\",children:formData&&formData[field.key]?formData[field.key]:'-'}),/*#__PURE__*/_jsx(\"td\",{className:\"arrow-cell\",children:formData&&formData[field.key]&&/*#__PURE__*/_jsx(\"button\",{className:\"arrow-button right-arrow\",onClick:()=>handleCopyValue(field.key,formData[field.key]),title:\"Utiliser la valeur du formulaire\",children:\"\\u2192\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"final-value\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedValues[field.key]||'',onChange:e=>handleChange(field.key,e.target.value),className:\"final-value-input\"})})]},field.key))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comparison-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:onCancel,children:\"Annuler\"}),/*#__PURE__*/_jsx(\"button\",{className:\"save-button\",onClick:handleSave,children:\"Valider et int\\xE9grer\"})]})]});};export default ComparisonTable;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ComparisonTable","_ref","formData","programmerData","onSave","onCancel","selectedValues","setSelectedValues","initialValues","Object","keys","forEach","key","console","log","handleCopyValue","field","value","prev","handleChange","handleSave","updatedData","commonToken","formLinkId","fieldDefinitions","label","className","children","map","onClick","title","type","onChange","e","target"],"sources":["/workspaces/app-booking/client/src/components/formValidation/ComparisonTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ComparisonTable.css';\n\n/**\n * Composant de tableau comparatif pour comparer et intégrer les données du formulaire\n * avec les données existantes du programmateur\n */\nconst ComparisonTable = ({ formData, programmerData, onSave, onCancel }) => {\n  // État pour stocker les valeurs sélectionnées\n  const [selectedValues, setSelectedValues] = useState({});\n  \n  // Initialiser les valeurs sélectionnées avec les valeurs du programmateur\n  useEffect(() => {\n    if (programmerData) {\n      const initialValues = {};\n      // Pour chaque champ du programmateur, utiliser sa valeur comme valeur initiale\n      Object.keys(programmerData).forEach(key => {\n        if (key !== 'id' && key !== 'submittedAt' && key !== 'status' && \n            key !== 'processedAt' && key !== 'commonToken' && key !== 'formLinkId') {\n          initialValues[key] = programmerData[key] || '';\n        }\n      });\n      setSelectedValues(initialValues);\n      console.log('ComparisonTable - Valeurs initiales chargées:', initialValues);\n    }\n  }, [programmerData]);\n  \n  // Gérer le clic sur une flèche pour copier une valeur\n  const handleCopyValue = (field, value) => {\n    setSelectedValues(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    console.log(`ComparisonTable - Valeur copiée pour le champ ${field}:`, value);\n  };\n  \n  // Gérer la modification manuelle d'une valeur\n  const handleChange = (field, value) => {\n    setSelectedValues(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  \n  // Gérer la sauvegarde des valeurs sélectionnées\n  const handleSave = () => {\n    // Conserver le token commun et l'ID du formulaire\n    const updatedData = {\n      ...selectedValues,\n      commonToken: formData.commonToken,\n      formLinkId: formData.formLinkId\n    };\n    console.log('ComparisonTable - Données finales à sauvegarder:', updatedData);\n    onSave(updatedData);\n  };\n  \n  // Définir les champs à comparer et leur libellé\n  const fieldDefinitions = [\n    { key: 'businessName', label: 'Raison sociale' },\n    { key: 'firstName', label: 'Prénom' },\n    { key: 'lastName', label: 'Nom' },\n    { key: 'role', label: 'Qualité' },\n    { key: 'address', label: 'Adresse' },\n    { key: 'venue', label: 'Lieu ou festival' },\n    { key: 'venueAddress', label: 'Adresse du lieu' },\n    { key: 'vatNumber', label: 'Numéro intracommunautaire' },\n    { key: 'siret', label: 'Siret' },\n    { key: 'email', label: 'Email' },\n    { key: 'phone', label: 'Téléphone' },\n    { key: 'website', label: 'Site web' }\n  ];\n  \n  return (\n    <div className=\"comparison-table-container\">\n      <h3>Comparaison et intégration des données</h3>\n      <p>Comparez les données du formulaire avec les données existantes et choisissez les valeurs à conserver.</p>\n      \n      <table className=\"comparison-table\">\n        <thead>\n          <tr>\n            <th>Champ</th>\n            <th>Valeur existante</th>\n            <th>Valeur du formulaire</th>\n            <th></th>\n            <th>Valeur finale</th>\n          </tr>\n        </thead>\n        <tbody>\n          {fieldDefinitions.map(field => (\n            <tr key={field.key}>\n              <td className=\"field-label\">{field.label}</td>\n              <td className=\"existing-value\">\n                {programmerData && programmerData[field.key] ? programmerData[field.key] : '-'}\n              </td>\n              <td className=\"form-value\">\n                {formData && formData[field.key] ? formData[field.key] : '-'}\n              </td>\n              <td className=\"arrow-cell\">\n                {formData && formData[field.key] && (\n                  <button \n                    className=\"arrow-button right-arrow\"\n                    onClick={() => handleCopyValue(field.key, formData[field.key])}\n                    title=\"Utiliser la valeur du formulaire\"\n                  >\n                    →\n                  </button>\n                )}\n              </td>\n              <td className=\"final-value\">\n                <input \n                  type=\"text\" \n                  value={selectedValues[field.key] || ''} \n                  onChange={(e) => handleChange(field.key, e.target.value)}\n                  className=\"final-value-input\"\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      \n      <div className=\"comparison-actions\">\n        <button className=\"cancel-button\" onClick={onCancel}>Annuler</button>\n        <button className=\"save-button\" onClick={handleSave}>Valider et intégrer</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ComparisonTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}