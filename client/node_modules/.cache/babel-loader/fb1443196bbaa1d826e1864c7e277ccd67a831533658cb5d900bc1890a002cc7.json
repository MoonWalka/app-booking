{"ast":null,"code":"// client/src/components/emails/EmailSystem.js\nimport React,{useState}from'react';import EmailComposer from'./EmailComposer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EmailSystem=()=>{const[emails,setEmails]=useState([]);const[showComposer,setShowComposer]=useState(false);const[selectedEmail,setSelectedEmail]=useState(null);// Fonction pour simuler l'envoi d'un email\nconst handleSendEmail=emailData=>{// Dans une application réelle, ceci serait une requête API\nconst newEmail={id:Date.now(),...emailData,status:'sent',date:new Date().toISOString()};setEmails([newEmail,...emails]);setShowComposer(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"email-system-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Syst\\xE8me d'Emails\"}),/*#__PURE__*/_jsx(\"div\",{className:\"email-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"compose-btn\",onClick:()=>{setSelectedEmail(null);setShowComposer(true);},children:\"Composer un nouvel email\"})}),showComposer&&/*#__PURE__*/_jsx(\"div\",{className:\"email-composer-wrapper\",children:/*#__PURE__*/_jsx(EmailComposer,{initialData:selectedEmail,onSend:handleSendEmail,onCancel:()=>setShowComposer(false)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"emails-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Emails envoy\\xE9s\"}),emails.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Aucun email envoy\\xE9.\"}):/*#__PURE__*/_jsxs(\"table\",{className:\"emails-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Destinataire\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Objet\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Statut\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:emails.map(email=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:email.to}),/*#__PURE__*/_jsx(\"td\",{children:email.subject}),/*#__PURE__*/_jsx(\"td\",{children:new Date(email.date).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:email.status}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSelectedEmail(email);setShowComposer(true);},className:\"view-btn\",children:\"Voir\"})})]},email.id))})]})]})]});};export default EmailSystem;","map":{"version":3,"names":["React","useState","EmailComposer","jsx","_jsx","jsxs","_jsxs","EmailSystem","emails","setEmails","showComposer","setShowComposer","selectedEmail","setSelectedEmail","handleSendEmail","emailData","newEmail","id","Date","now","status","date","toISOString","className","children","onClick","initialData","onSend","onCancel","length","map","email","to","subject","toLocaleString"],"sources":["/workspaces/app-booking/client/src/components/emails/EmailSystem.js"],"sourcesContent":["// client/src/components/emails/EmailSystem.js\nimport React, { useState } from 'react';\nimport EmailComposer from './EmailComposer';\n\nconst EmailSystem = () => {\n  const [emails, setEmails] = useState([]);\n  const [showComposer, setShowComposer] = useState(false);\n  const [selectedEmail, setSelectedEmail] = useState(null);\n\n  // Fonction pour simuler l'envoi d'un email\n  const handleSendEmail = (emailData) => {\n    // Dans une application réelle, ceci serait une requête API\n    const newEmail = {\n      id: Date.now(),\n      ...emailData,\n      status: 'sent',\n      date: new Date().toISOString()\n    };\n    \n    setEmails([newEmail, ...emails]);\n    setShowComposer(false);\n  };\n\n  return (\n    <div className=\"email-system-container\">\n      <h2>Système d'Emails</h2>\n      \n      <div className=\"email-actions\">\n        <button \n          className=\"compose-btn\"\n          onClick={() => {\n            setSelectedEmail(null);\n            setShowComposer(true);\n          }}\n        >\n          Composer un nouvel email\n        </button>\n      </div>\n      \n      {showComposer && (\n        <div className=\"email-composer-wrapper\">\n          <EmailComposer \n            initialData={selectedEmail}\n            onSend={handleSendEmail}\n            onCancel={() => setShowComposer(false)}\n          />\n        </div>\n      )}\n      \n      <div className=\"emails-list\">\n        <h3>Emails envoyés</h3>\n        {emails.length === 0 ? (\n          <p>Aucun email envoyé.</p>\n        ) : (\n          <table className=\"emails-table\">\n            <thead>\n              <tr>\n                <th>Destinataire</th>\n                <th>Objet</th>\n                <th>Date</th>\n                <th>Statut</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {emails.map((email) => (\n                <tr key={email.id}>\n                  <td>{email.to}</td>\n                  <td>{email.subject}</td>\n                  <td>{new Date(email.date).toLocaleString()}</td>\n                  <td>{email.status}</td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        setSelectedEmail(email);\n                        setShowComposer(true);\n                      }}\n                      className=\"view-btn\"\n                    >\n                      Voir\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EmailSystem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}