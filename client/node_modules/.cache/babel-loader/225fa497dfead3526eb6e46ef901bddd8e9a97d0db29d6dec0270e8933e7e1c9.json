{"ast":null,"code":"import React,{useState,useEffect}from'react';import{updateFormSubmissionWithValidatedData,updateLinkedEntities}from'../../services/formSubmissionsService';import{getProgrammerByEmail,updateProgrammer}from'../../services/programmersService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ComparisonTable=_ref=>{let{submission,onValidationComplete}=_ref;const[programmerData,setProgrammerData]=useState(null);const[finalData,setFinalData]=useState({});const[loading,setLoading]=useState(true);useEffect(()=>{const fetchProgrammerData=async()=>{try{setLoading(true);// Rechercher le programmateur par email\nif(submission.email){const programmer=await getProgrammerByEmail(submission.email);if(programmer){setProgrammerData(programmer);// Initialiser les données finales avec les valeurs existantes du programmateur\nconst initialFinalData={};Object.keys(submission).forEach(key=>{if(key!=='id'&&key!=='status'&&key!=='createdAt'&&key!=='commonToken'){initialFinalData[key]=programmer[key]||'';}});setFinalData(initialFinalData);}else{// Si aucun programmateur n'est trouvé, utiliser les données de la soumission\nconst initialFinalData={};Object.keys(submission).forEach(key=>{if(key!=='id'&&key!=='status'&&key!=='createdAt'&&key!=='commonToken'){initialFinalData[key]=submission[key]||'';}});setFinalData(initialFinalData);}}else{// Si pas d'email, utiliser les données de la soumission\nconst initialFinalData={};Object.keys(submission).forEach(key=>{if(key!=='id'&&key!=='status'&&key!=='createdAt'&&key!=='commonToken'){initialFinalData[key]=submission[key]||'';}});setFinalData(initialFinalData);}setLoading(false);}catch(error){console.error(\"Erreur lors de la récupération des données du programmateur:\",error);setLoading(false);}};fetchProgrammerData();},[submission]);const handleCopyFromSubmission=field=>{setFinalData(prevData=>({...prevData,[field]:submission[field]||''}));};const handleCopyFromProgrammer=field=>{if(programmerData&&programmerData[field]){setFinalData(prevData=>({...prevData,[field]:programmerData[field]}));}};const handleInputChange=(field,value)=>{setFinalData(prevData=>({...prevData,[field]:value}));};const handleValidateData=async()=>{try{// Mettre à jour la soumission avec les données validées\nawait updateFormSubmissionWithValidatedData(submission.id,finalData);// Si un token commun existe, mettre à jour toutes les entités liées\nif(submission.commonToken){await updateLinkedEntities(submission.commonToken,finalData);}// Si un programmateur existe, le mettre à jour\nif(programmerData){await updateProgrammer(programmerData.id,finalData);}// Notifier le composant parent que la validation est terminée\nif(onValidationComplete){onValidationComplete();}}catch(error){console.error(\"Erreur lors de la validation des données:\",error);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Chargement des donn\\xE9es...\"});}// Définir les champs à afficher et leur libellé\nconst fields=[{key:'firstName',label:'Prénom'},{key:'lastName',label:'Nom'},{key:'organization',label:'Structure'},{key:'position',label:'Fonction'},{key:'email',label:'Email'},{key:'phone',label:'Téléphone'},{key:'address',label:'Adresse'},{key:'postalCode',label:'Code postal'},{key:'city',label:'Ville'},{key:'country',label:'Pays'},{key:'website',label:'Site web'},{key:'vatNumber',label:'Numéro TVA'},{key:'siret',label:'SIRET'},{key:'notes',label:'Notes'}];return/*#__PURE__*/_jsxs(\"div\",{className:\"comparison-table-container\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"comparison-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Champ\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Valeur du formulaire\"}),/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{children:\"Valeur existante\"}),/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{children:\"Valeur finale\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:fields.map(field=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"field-label\",children:field.label}),/*#__PURE__*/_jsx(\"td\",{className:\"submission-value\",children:submission[field.key]||''}),/*#__PURE__*/_jsx(\"td\",{className:\"action-cell\",children:submission[field.key]&&/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>handleCopyFromSubmission(field.key),title:\"Utiliser cette valeur\",children:\"\\u2192\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"programmer-value\",children:programmerData?programmerData[field.key]||'':''}),/*#__PURE__*/_jsx(\"td\",{className:\"action-cell\",children:programmerData&&programmerData[field.key]&&/*#__PURE__*/_jsx(\"button\",{className:\"copy-btn\",onClick:()=>handleCopyFromProgrammer(field.key),title:\"Utiliser cette valeur\",children:\"\\u2192\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"final-value\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:finalData[field.key]||'',onChange:e=>handleInputChange(field.key,e.target.value)})})]},field.key))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"validation-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"validate-final-btn\",onClick:handleValidateData,children:\"Valider les donn\\xE9es\"})})]});};export default ComparisonTable;","map":{"version":3,"names":["React","useState","useEffect","updateFormSubmissionWithValidatedData","updateLinkedEntities","getProgrammerByEmail","updateProgrammer","jsx","_jsx","jsxs","_jsxs","ComparisonTable","_ref","submission","onValidationComplete","programmerData","setProgrammerData","finalData","setFinalData","loading","setLoading","fetchProgrammerData","email","programmer","initialFinalData","Object","keys","forEach","key","error","console","handleCopyFromSubmission","field","prevData","handleCopyFromProgrammer","handleInputChange","value","handleValidateData","id","commonToken","className","children","fields","label","map","onClick","title","type","onChange","e","target"],"sources":["/workspaces/app-booking/client/src/components/formValidation/ComparisonTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { updateFormSubmissionWithValidatedData, updateLinkedEntities } from '../../services/formSubmissionsService';\nimport { getProgrammerByEmail, updateProgrammer } from '../../services/programmersService';\n\n\nconst ComparisonTable = ({ submission, onValidationComplete }) => {\n  const [programmerData, setProgrammerData] = useState(null);\n  const [finalData, setFinalData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchProgrammerData = async () => {\n      try {\n        setLoading(true);\n        \n        // Rechercher le programmateur par email\n        if (submission.email) {\n          const programmer = await getProgrammerByEmail(submission.email);\n          if (programmer) {\n            setProgrammerData(programmer);\n            \n            // Initialiser les données finales avec les valeurs existantes du programmateur\n            const initialFinalData = {};\n            Object.keys(submission).forEach(key => {\n              if (key !== 'id' && key !== 'status' && key !== 'createdAt' && key !== 'commonToken') {\n                initialFinalData[key] = programmer[key] || '';\n              }\n            });\n            setFinalData(initialFinalData);\n          } else {\n            // Si aucun programmateur n'est trouvé, utiliser les données de la soumission\n            const initialFinalData = {};\n            Object.keys(submission).forEach(key => {\n              if (key !== 'id' && key !== 'status' && key !== 'createdAt' && key !== 'commonToken') {\n                initialFinalData[key] = submission[key] || '';\n              }\n            });\n            setFinalData(initialFinalData);\n          }\n        } else {\n          // Si pas d'email, utiliser les données de la soumission\n          const initialFinalData = {};\n          Object.keys(submission).forEach(key => {\n            if (key !== 'id' && key !== 'status' && key !== 'createdAt' && key !== 'commonToken') {\n              initialFinalData[key] = submission[key] || '';\n            }\n          });\n          setFinalData(initialFinalData);\n        }\n        \n        setLoading(false);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données du programmateur:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchProgrammerData();\n  }, [submission]);\n\n  const handleCopyFromSubmission = (field) => {\n    setFinalData(prevData => ({\n      ...prevData,\n      [field]: submission[field] || ''\n    }));\n  };\n\n  const handleCopyFromProgrammer = (field) => {\n    if (programmerData && programmerData[field]) {\n      setFinalData(prevData => ({\n        ...prevData,\n        [field]: programmerData[field]\n      }));\n    }\n  };\n\n  const handleInputChange = (field, value) => {\n    setFinalData(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n\n  const handleValidateData = async () => {\n    try {\n      // Mettre à jour la soumission avec les données validées\n      await updateFormSubmissionWithValidatedData(submission.id, finalData);\n      \n      // Si un token commun existe, mettre à jour toutes les entités liées\n      if (submission.commonToken) {\n        await updateLinkedEntities(submission.commonToken, finalData);\n      }\n      \n      // Si un programmateur existe, le mettre à jour\n      if (programmerData) {\n        await updateProgrammer(programmerData.id, finalData);\n      }\n      \n      // Notifier le composant parent que la validation est terminée\n      if (onValidationComplete) {\n        onValidationComplete();\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la validation des données:\", error);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Chargement des données...</div>;\n  }\n\n  // Définir les champs à afficher et leur libellé\n  const fields = [\n    { key: 'firstName', label: 'Prénom' },\n    { key: 'lastName', label: 'Nom' },\n    { key: 'organization', label: 'Structure' },\n    { key: 'position', label: 'Fonction' },\n    { key: 'email', label: 'Email' },\n    { key: 'phone', label: 'Téléphone' },\n    { key: 'address', label: 'Adresse' },\n    { key: 'postalCode', label: 'Code postal' },\n    { key: 'city', label: 'Ville' },\n    { key: 'country', label: 'Pays' },\n    { key: 'website', label: 'Site web' },\n    { key: 'vatNumber', label: 'Numéro TVA' },\n    { key: 'siret', label: 'SIRET' },\n    { key: 'notes', label: 'Notes' }\n  ];\n\n  return (\n    <div className=\"comparison-table-container\">\n      <table className=\"comparison-table\">\n        <thead>\n          <tr>\n            <th>Champ</th>\n            <th>Valeur du formulaire</th>\n            <th></th>\n            <th>Valeur existante</th>\n            <th></th>\n            <th>Valeur finale</th>\n          </tr>\n        </thead>\n        <tbody>\n          {fields.map((field) => (\n            <tr key={field.key}>\n              <td className=\"field-label\">{field.label}</td>\n              <td className=\"submission-value\">{submission[field.key] || ''}</td>\n              <td className=\"action-cell\">\n                {submission[field.key] && (\n                  <button \n                    className=\"copy-btn\"\n                    onClick={() => handleCopyFromSubmission(field.key)}\n                    title=\"Utiliser cette valeur\"\n                  >\n                    →\n                  </button>\n                )}\n              </td>\n              <td className=\"programmer-value\">\n                {programmerData ? (programmerData[field.key] || '') : ''}\n              </td>\n              <td className=\"action-cell\">\n                {programmerData && programmerData[field.key] && (\n                  <button \n                    className=\"copy-btn\"\n                    onClick={() => handleCopyFromProgrammer(field.key)}\n                    title=\"Utiliser cette valeur\"\n                  >\n                    →\n                  </button>\n                )}\n              </td>\n              <td className=\"final-value\">\n                <input \n                  type=\"text\" \n                  value={finalData[field.key] || ''} \n                  onChange={(e) => handleInputChange(field.key, e.target.value)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      \n      <div className=\"validation-actions\">\n        <button \n          className=\"validate-final-btn\"\n          onClick={handleValidateData}\n        >\n          Valider les données\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ComparisonTable;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,qCAAqC,CAAEC,oBAAoB,KAAQ,uCAAuC,CACnH,OAASC,oBAAoB,CAAEC,gBAAgB,KAAQ,mCAAmC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG3F,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAA0C,IAAzC,CAAEC,UAAU,CAAEC,oBAAqB,CAAC,CAAAF,IAAA,CAC3D,KAAM,CAACG,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACgB,SAAS,CAAEC,YAAY,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9C,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmB,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACFD,UAAU,CAAC,IAAI,CAAC,CAEhB;AACA,GAAIP,UAAU,CAACS,KAAK,CAAE,CACpB,KAAM,CAAAC,UAAU,CAAG,KAAM,CAAAlB,oBAAoB,CAACQ,UAAU,CAACS,KAAK,CAAC,CAC/D,GAAIC,UAAU,CAAE,CACdP,iBAAiB,CAACO,UAAU,CAAC,CAE7B;AACA,KAAM,CAAAC,gBAAgB,CAAG,CAAC,CAAC,CAC3BC,MAAM,CAACC,IAAI,CAACb,UAAU,CAAC,CAACc,OAAO,CAACC,GAAG,EAAI,CACrC,GAAIA,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAK,QAAQ,EAAIA,GAAG,GAAK,WAAW,EAAIA,GAAG,GAAK,aAAa,CAAE,CACpFJ,gBAAgB,CAACI,GAAG,CAAC,CAAGL,UAAU,CAACK,GAAG,CAAC,EAAI,EAAE,CAC/C,CACF,CAAC,CAAC,CACFV,YAAY,CAACM,gBAAgB,CAAC,CAChC,CAAC,IAAM,CACL;AACA,KAAM,CAAAA,gBAAgB,CAAG,CAAC,CAAC,CAC3BC,MAAM,CAACC,IAAI,CAACb,UAAU,CAAC,CAACc,OAAO,CAACC,GAAG,EAAI,CACrC,GAAIA,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAK,QAAQ,EAAIA,GAAG,GAAK,WAAW,EAAIA,GAAG,GAAK,aAAa,CAAE,CACpFJ,gBAAgB,CAACI,GAAG,CAAC,CAAGf,UAAU,CAACe,GAAG,CAAC,EAAI,EAAE,CAC/C,CACF,CAAC,CAAC,CACFV,YAAY,CAACM,gBAAgB,CAAC,CAChC,CACF,CAAC,IAAM,CACL;AACA,KAAM,CAAAA,gBAAgB,CAAG,CAAC,CAAC,CAC3BC,MAAM,CAACC,IAAI,CAACb,UAAU,CAAC,CAACc,OAAO,CAACC,GAAG,EAAI,CACrC,GAAIA,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAK,QAAQ,EAAIA,GAAG,GAAK,WAAW,EAAIA,GAAG,GAAK,aAAa,CAAE,CACpFJ,gBAAgB,CAACI,GAAG,CAAC,CAAGf,UAAU,CAACe,GAAG,CAAC,EAAI,EAAE,CAC/C,CACF,CAAC,CAAC,CACFV,YAAY,CAACM,gBAAgB,CAAC,CAChC,CAEAJ,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8DAA8D,CAAEA,KAAK,CAAC,CACpFT,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,CAACR,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAkB,wBAAwB,CAAIC,KAAK,EAAK,CAC1Cd,YAAY,CAACe,QAAQ,GAAK,CACxB,GAAGA,QAAQ,CACX,CAACD,KAAK,EAAGnB,UAAU,CAACmB,KAAK,CAAC,EAAI,EAChC,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAE,wBAAwB,CAAIF,KAAK,EAAK,CAC1C,GAAIjB,cAAc,EAAIA,cAAc,CAACiB,KAAK,CAAC,CAAE,CAC3Cd,YAAY,CAACe,QAAQ,GAAK,CACxB,GAAGA,QAAQ,CACX,CAACD,KAAK,EAAGjB,cAAc,CAACiB,KAAK,CAC/B,CAAC,CAAC,CAAC,CACL,CACF,CAAC,CAED,KAAM,CAAAG,iBAAiB,CAAGA,CAACH,KAAK,CAAEI,KAAK,GAAK,CAC1ClB,YAAY,CAACe,QAAQ,GAAK,CACxB,GAAGA,QAAQ,CACX,CAACD,KAAK,EAAGI,KACX,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF;AACA,KAAM,CAAAlC,qCAAqC,CAACU,UAAU,CAACyB,EAAE,CAAErB,SAAS,CAAC,CAErE;AACA,GAAIJ,UAAU,CAAC0B,WAAW,CAAE,CAC1B,KAAM,CAAAnC,oBAAoB,CAACS,UAAU,CAAC0B,WAAW,CAAEtB,SAAS,CAAC,CAC/D,CAEA;AACA,GAAIF,cAAc,CAAE,CAClB,KAAM,CAAAT,gBAAgB,CAACS,cAAc,CAACuB,EAAE,CAAErB,SAAS,CAAC,CACtD,CAEA;AACA,GAAIH,oBAAoB,CAAE,CACxBA,oBAAoB,CAAC,CAAC,CACxB,CACF,CAAE,MAAOe,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACnE,CACF,CAAC,CAED,GAAIV,OAAO,CAAE,CACX,mBAAOX,IAAA,QAAKgC,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,8BAAyB,CAAK,CAAC,CACjE,CAEA;AACA,KAAM,CAAAC,MAAM,CAAG,CACb,CAAEd,GAAG,CAAE,WAAW,CAAEe,KAAK,CAAE,QAAS,CAAC,CACrC,CAAEf,GAAG,CAAE,UAAU,CAAEe,KAAK,CAAE,KAAM,CAAC,CACjC,CAAEf,GAAG,CAAE,cAAc,CAAEe,KAAK,CAAE,WAAY,CAAC,CAC3C,CAAEf,GAAG,CAAE,UAAU,CAAEe,KAAK,CAAE,UAAW,CAAC,CACtC,CAAEf,GAAG,CAAE,OAAO,CAAEe,KAAK,CAAE,OAAQ,CAAC,CAChC,CAAEf,GAAG,CAAE,OAAO,CAAEe,KAAK,CAAE,WAAY,CAAC,CACpC,CAAEf,GAAG,CAAE,SAAS,CAAEe,KAAK,CAAE,SAAU,CAAC,CACpC,CAAEf,GAAG,CAAE,YAAY,CAAEe,KAAK,CAAE,aAAc,CAAC,CAC3C,CAAEf,GAAG,CAAE,MAAM,CAAEe,KAAK,CAAE,OAAQ,CAAC,CAC/B,CAAEf,GAAG,CAAE,SAAS,CAAEe,KAAK,CAAE,MAAO,CAAC,CACjC,CAAEf,GAAG,CAAE,SAAS,CAAEe,KAAK,CAAE,UAAW,CAAC,CACrC,CAAEf,GAAG,CAAE,WAAW,CAAEe,KAAK,CAAE,YAAa,CAAC,CACzC,CAAEf,GAAG,CAAE,OAAO,CAAEe,KAAK,CAAE,OAAQ,CAAC,CAChC,CAAEf,GAAG,CAAE,OAAO,CAAEe,KAAK,CAAE,OAAQ,CAAC,CACjC,CAED,mBACEjC,KAAA,QAAK8B,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzC/B,KAAA,UAAO8B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eACjCjC,IAAA,UAAAiC,QAAA,cACE/B,KAAA,OAAA+B,QAAA,eACEjC,IAAA,OAAAiC,QAAA,CAAI,OAAK,CAAI,CAAC,cACdjC,IAAA,OAAAiC,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BjC,IAAA,QAAQ,CAAC,cACTA,IAAA,OAAAiC,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBjC,IAAA,QAAQ,CAAC,cACTA,IAAA,OAAAiC,QAAA,CAAI,eAAa,CAAI,CAAC,EACpB,CAAC,CACA,CAAC,cACRjC,IAAA,UAAAiC,QAAA,CACGC,MAAM,CAACE,GAAG,CAAEZ,KAAK,eAChBtB,KAAA,OAAA+B,QAAA,eACEjC,IAAA,OAAIgC,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAET,KAAK,CAACW,KAAK,CAAK,CAAC,cAC9CnC,IAAA,OAAIgC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAE5B,UAAU,CAACmB,KAAK,CAACJ,GAAG,CAAC,EAAI,EAAE,CAAK,CAAC,cACnEpB,IAAA,OAAIgC,SAAS,CAAC,aAAa,CAAAC,QAAA,CACxB5B,UAAU,CAACmB,KAAK,CAACJ,GAAG,CAAC,eACpBpB,IAAA,WACEgC,SAAS,CAAC,UAAU,CACpBK,OAAO,CAAEA,CAAA,GAAMd,wBAAwB,CAACC,KAAK,CAACJ,GAAG,CAAE,CACnDkB,KAAK,CAAC,uBAAuB,CAAAL,QAAA,CAC9B,QAED,CAAQ,CACT,CACC,CAAC,cACLjC,IAAA,OAAIgC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC7B1B,cAAc,CAAIA,cAAc,CAACiB,KAAK,CAACJ,GAAG,CAAC,EAAI,EAAE,CAAI,EAAE,CACtD,CAAC,cACLpB,IAAA,OAAIgC,SAAS,CAAC,aAAa,CAAAC,QAAA,CACxB1B,cAAc,EAAIA,cAAc,CAACiB,KAAK,CAACJ,GAAG,CAAC,eAC1CpB,IAAA,WACEgC,SAAS,CAAC,UAAU,CACpBK,OAAO,CAAEA,CAAA,GAAMX,wBAAwB,CAACF,KAAK,CAACJ,GAAG,CAAE,CACnDkB,KAAK,CAAC,uBAAuB,CAAAL,QAAA,CAC9B,QAED,CAAQ,CACT,CACC,CAAC,cACLjC,IAAA,OAAIgC,SAAS,CAAC,aAAa,CAAAC,QAAA,cACzBjC,IAAA,UACEuC,IAAI,CAAC,MAAM,CACXX,KAAK,CAAEnB,SAAS,CAACe,KAAK,CAACJ,GAAG,CAAC,EAAI,EAAG,CAClCoB,QAAQ,CAAGC,CAAC,EAAKd,iBAAiB,CAACH,KAAK,CAACJ,GAAG,CAAEqB,CAAC,CAACC,MAAM,CAACd,KAAK,CAAE,CAC/D,CAAC,CACA,CAAC,GAlCEJ,KAAK,CAACJ,GAmCX,CACL,CAAC,CACG,CAAC,EACH,CAAC,cAERpB,IAAA,QAAKgC,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjCjC,IAAA,WACEgC,SAAS,CAAC,oBAAoB,CAC9BK,OAAO,CAAER,kBAAmB,CAAAI,QAAA,CAC7B,wBAED,CAAQ,CAAC,CACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA9B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}