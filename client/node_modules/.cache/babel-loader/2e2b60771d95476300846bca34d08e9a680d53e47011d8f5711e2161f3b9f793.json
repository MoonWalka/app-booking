{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getAllFormSubmissions,getPendingFormSubmissions,updateFormSubmissionStatus}from'../../services/formSubmissionsService';import ComparisonTable from'./ComparisonTable';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FormValidationList=()=>{const[submissions,setSubmissions]=useState([]);const[pendingSubmissions,setPendingSubmissions]=useState([]);const[loading,setLoading]=useState(true);const[selectedSubmission,setSelectedSubmission]=useState(null);const[showComparisonModal,setShowComparisonModal]=useState(false);const[debugInfo,setDebugInfo]=useState('');useEffect(()=>{const fetchSubmissions=async()=>{try{setLoading(true);// Récupérer toutes les soumissions\nconst allSubmissions=await getAllFormSubmissions();setSubmissions(allSubmissions||[]);// Récupérer les soumissions en attente\nconst pendingSubmissionsData=await getPendingFormSubmissions();setPendingSubmissions(pendingSubmissionsData||[]);// Générer des informations de débogage\nconst pendingCount=pendingSubmissionsData?pendingSubmissionsData.length:0;const statusCounts={};const withCommonToken=allSubmissions.filter(s=>s.commonToken).length;const withoutCommonToken=allSubmissions.filter(s=>!s.commonToken).length;allSubmissions.forEach(submission=>{const status=submission.status||'unknown';statusCounts[status]=(statusCounts[status]||0)+1;});const statusDistribution=Object.entries(statusCounts).map(_ref=>{let[status,count]=_ref;return`${status}: ${count}`;}).join('\\n');const debugText=`\nTotal des soumissions: ${allSubmissions.length}\nSoumissions en attente: ${pendingCount}\nDistribution des statuts:\n${statusDistribution}\nAvec token commun: ${withCommonToken}\nSans token commun: ${withoutCommonToken}\n${pendingCount===0?'Aucune soumission en attente de validation.':''}\n        `;setDebugInfo(debugText);setLoading(false);}catch(error){console.error(\"Erreur lors du chargement des soumissions:\",error);setLoading(false);}};fetchSubmissions();},[]);const handleValidateClick=submission=>{setSelectedSubmission(submission);setShowComparisonModal(true);};const handleRejectSubmission=async submissionId=>{try{const success=await updateFormSubmissionStatus(submissionId,'rejected');if(success){// Mettre à jour la liste des soumissions\nsetPendingSubmissions(prevSubmissions=>prevSubmissions.filter(sub=>sub.id!==submissionId));// Mettre à jour la liste complète\nsetSubmissions(prevSubmissions=>prevSubmissions.map(sub=>sub.id===submissionId?{...sub,status:'rejected'}:sub));}}catch(error){console.error(\"Erreur lors du rejet de la soumission:\",error);}};const closeComparisonModal=()=>{setShowComparisonModal(false);setSelectedSubmission(null);};const handleValidationComplete=()=>{// Rafraîchir les données après validation\ncloseComparisonModal();// Mettre à jour la liste des soumissions en attente\nsetPendingSubmissions(prevSubmissions=>prevSubmissions.filter(sub=>sub.id!==selectedSubmission.id));// Mettre à jour la liste complète\nsetSubmissions(prevSubmissions=>prevSubmissions.map(sub=>sub.id===selectedSubmission.id?{...sub,status:'validated'}:sub));};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Chargement des soumissions...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"form-validation-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Validation des formulaires\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"debug-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Informations de d\\xE9bogage\"}),/*#__PURE__*/_jsx(\"pre\",{children:debugInfo})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pending-submissions\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Soumissions en attente de validation\"}),pendingSubmissions.length>0?/*#__PURE__*/_jsxs(\"table\",{className:\"submissions-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pr\\xE9nom\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Structure\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"T\\xE9l\\xE9phone\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:pendingSubmissions.map(submission=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:submission.createdAt?new Date(submission.createdAt.seconds*1000).toLocaleDateString():'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:submission.lastName||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:submission.firstName||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:submission.organization||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:submission.email||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:submission.phone||'N/A'}),/*#__PURE__*/_jsxs(\"td\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"validate-btn\",onClick:()=>handleValidateClick(submission),children:\"Valider\"}),/*#__PURE__*/_jsx(\"button\",{className:\"reject-btn\",onClick:()=>handleRejectSubmission(submission.id),children:\"Rejeter\"})]})]},submission.id))})]}):/*#__PURE__*/_jsx(\"p\",{className:\"no-submissions\",children:\"Aucune soumission en attente de validation.\"})]}),showComparisonModal&&selectedSubmission&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"comparison-modal\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"close-modal\",onClick:closeComparisonModal,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Validation des donn\\xE9es\"}),/*#__PURE__*/_jsx(ComparisonTable,{submission:selectedSubmission,onValidationComplete:handleValidationComplete})]})})]});};export default FormValidationList;","map":{"version":3,"names":["React","useState","useEffect","getAllFormSubmissions","getPendingFormSubmissions","updateFormSubmissionStatus","ComparisonTable","jsx","_jsx","jsxs","_jsxs","FormValidationList","submissions","setSubmissions","pendingSubmissions","setPendingSubmissions","loading","setLoading","selectedSubmission","setSelectedSubmission","showComparisonModal","setShowComparisonModal","debugInfo","setDebugInfo","fetchSubmissions","allSubmissions","pendingSubmissionsData","pendingCount","length","statusCounts","withCommonToken","filter","s","commonToken","withoutCommonToken","forEach","submission","status","statusDistribution","Object","entries","map","_ref","count","join","debugText","error","console","handleValidateClick","handleRejectSubmission","submissionId","success","prevSubmissions","sub","id","closeComparisonModal","handleValidationComplete","className","children","createdAt","Date","seconds","toLocaleDateString","lastName","firstName","organization","email","phone","onClick","onValidationComplete"],"sources":["/workspaces/app-booking/client/src/components/formValidation/FormValidationList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllFormSubmissions, getPendingFormSubmissions, updateFormSubmissionStatus } from '../../services/formSubmissionsService';\nimport ComparisonTable from './ComparisonTable';\n\n\nconst FormValidationList = () => {\n  const [submissions, setSubmissions] = useState([]);\n  const [pendingSubmissions, setPendingSubmissions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedSubmission, setSelectedSubmission] = useState(null);\n  const [showComparisonModal, setShowComparisonModal] = useState(false);\n  const [debugInfo, setDebugInfo] = useState('');\n\n  useEffect(() => {\n    const fetchSubmissions = async () => {\n      try {\n        setLoading(true);\n        \n        // Récupérer toutes les soumissions\n        const allSubmissions = await getAllFormSubmissions();\n        setSubmissions(allSubmissions || []);\n        \n        // Récupérer les soumissions en attente\n        const pendingSubmissionsData = await getPendingFormSubmissions();\n        setPendingSubmissions(pendingSubmissionsData || []);\n        \n        // Générer des informations de débogage\n        const pendingCount = pendingSubmissionsData ? pendingSubmissionsData.length : 0;\n        const statusCounts = {};\n        const withCommonToken = allSubmissions.filter(s => s.commonToken).length;\n        const withoutCommonToken = allSubmissions.filter(s => !s.commonToken).length;\n        \n        allSubmissions.forEach(submission => {\n          const status = submission.status || 'unknown';\n          statusCounts[status] = (statusCounts[status] || 0) + 1;\n        });\n        \n        const statusDistribution = Object.entries(statusCounts)\n          .map(([status, count]) => `${status}: ${count}`)\n          .join('\\n');\n        \n        const debugText = `\nTotal des soumissions: ${allSubmissions.length}\nSoumissions en attente: ${pendingCount}\nDistribution des statuts:\n${statusDistribution}\nAvec token commun: ${withCommonToken}\nSans token commun: ${withoutCommonToken}\n${pendingCount === 0 ? 'Aucune soumission en attente de validation.' : ''}\n        `;\n        \n        setDebugInfo(debugText);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des soumissions:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchSubmissions();\n  }, []);\n\n  const handleValidateClick = (submission) => {\n    setSelectedSubmission(submission);\n    setShowComparisonModal(true);\n  };\n\n  const handleRejectSubmission = async (submissionId) => {\n    try {\n      const success = await updateFormSubmissionStatus(submissionId, 'rejected');\n      if (success) {\n        // Mettre à jour la liste des soumissions\n        setPendingSubmissions(prevSubmissions => \n          prevSubmissions.filter(sub => sub.id !== submissionId)\n        );\n        \n        // Mettre à jour la liste complète\n        setSubmissions(prevSubmissions => \n          prevSubmissions.map(sub => \n            sub.id === submissionId ? { ...sub, status: 'rejected' } : sub\n          )\n        );\n      }\n    } catch (error) {\n      console.error(\"Erreur lors du rejet de la soumission:\", error);\n    }\n  };\n\n  const closeComparisonModal = () => {\n    setShowComparisonModal(false);\n    setSelectedSubmission(null);\n  };\n\n  const handleValidationComplete = () => {\n    // Rafraîchir les données après validation\n    closeComparisonModal();\n    \n    // Mettre à jour la liste des soumissions en attente\n    setPendingSubmissions(prevSubmissions => \n      prevSubmissions.filter(sub => sub.id !== selectedSubmission.id)\n    );\n    \n    // Mettre à jour la liste complète\n    setSubmissions(prevSubmissions => \n      prevSubmissions.map(sub => \n        sub.id === selectedSubmission.id ? { ...sub, status: 'validated' } : sub\n      )\n    );\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Chargement des soumissions...</div>;\n  }\n\n  return (\n    <div className=\"form-validation-container\">\n      <h1>Validation des formulaires</h1>\n      \n      <div className=\"debug-info\">\n        <h3>Informations de débogage</h3>\n        <pre>{debugInfo}</pre>\n      </div>\n      \n      <div className=\"pending-submissions\">\n        <h2>Soumissions en attente de validation</h2>\n        \n        {pendingSubmissions.length > 0 ? (\n          <table className=\"submissions-table\">\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Nom</th>\n                <th>Prénom</th>\n                <th>Structure</th>\n                <th>Email</th>\n                <th>Téléphone</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {pendingSubmissions.map((submission) => (\n                <tr key={submission.id}>\n                  <td>{submission.createdAt ? new Date(submission.createdAt.seconds * 1000).toLocaleDateString() : 'N/A'}</td>\n                  <td>{submission.lastName || 'N/A'}</td>\n                  <td>{submission.firstName || 'N/A'}</td>\n                  <td>{submission.organization || 'N/A'}</td>\n                  <td>{submission.email || 'N/A'}</td>\n                  <td>{submission.phone || 'N/A'}</td>\n                  <td className=\"action-buttons\">\n                    <button \n                      className=\"validate-btn\"\n                      onClick={() => handleValidateClick(submission)}\n                    >\n                      Valider\n                    </button>\n                    <button \n                      className=\"reject-btn\"\n                      onClick={() => handleRejectSubmission(submission.id)}\n                    >\n                      Rejeter\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <p className=\"no-submissions\">Aucune soumission en attente de validation.</p>\n        )}\n      </div>\n      \n      {showComparisonModal && selectedSubmission && (\n        <div className=\"modal-overlay\">\n          <div className=\"comparison-modal\">\n            <button className=\"close-modal\" onClick={closeComparisonModal}>×</button>\n            <h2>Validation des données</h2>\n            <ComparisonTable \n              submission={selectedSubmission} \n              onValidationComplete={handleValidationComplete}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormValidationList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}