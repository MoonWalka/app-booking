{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{getAuth,signInWithEmailAndPassword,signOut,onAuthStateChanged}from'firebase/auth';import{app}from'../firebase';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>useContext(AuthContext);// Configuration pour le mode bypass d'authentification\nconst BYPASS_AUTH=false;// Mettre à false pour activer l'authentification réelle\nconst TEST_USER={id:'test-user-id',email:'test@example.com',name:'Utilisateur Test',role:'admin'};export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(BYPASS_AUTH?TEST_USER:null);const[isAuthenticated,setIsAuthenticated]=useState(BYPASS_AUTH);const[loading,setLoading]=useState(!BYPASS_AUTH);const[error,setError]=useState(null);const auth=getAuth(app);useEffect(()=>{if(BYPASS_AUTH){console.log('Mode bypass d\\'authentification activé - Authentification simulée');return;}const unsubscribe=onAuthStateChanged(auth,user=>{if(user){// Utilisateur connecté\nsetCurrentUser({id:user.uid,email:user.email,name:user.displayName||user.email.split('@')[0],role:'admin'// Par défaut, tous les utilisateurs sont admin pour l'instant\n});setIsAuthenticated(true);}else{// Utilisateur déconnecté\nsetCurrentUser(null);setIsAuthenticated(false);}setLoading(false);});return()=>unsubscribe();},[auth]);const login=async(email,password)=>{if(BYPASS_AUTH){console.log('Mode bypass d\\'authentification activé - Login simulé');setCurrentUser(TEST_USER);setIsAuthenticated(true);setError(null);return true;}try{setLoading(true);await signInWithEmailAndPassword(auth,email,password);setError(null);return true;}catch(error){console.error('Erreur de connexion:',error);setError(error.message);return false;}finally{setLoading(false);}};const logout=async()=>{if(BYPASS_AUTH){console.log('Mode bypass d\\'authentification activé - Logout ignoré');return;}try{await signOut(auth);}catch(error){console.error('Erreur lors de la déconnexion:',error);}};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser,isAuthenticated,loading,error,login,logout,bypassEnabled:BYPASS_AUTH},children:children})});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getAuth","signInWithEmailAndPassword","signOut","onAuthStateChanged","app","jsx","_jsx","AuthContext","useAuth","BYPASS_AUTH","TEST_USER","id","email","name","role","AuthProvider","_ref","children","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","auth","console","log","unsubscribe","user","uid","displayName","split","login","password","message","logout","Fragment","Provider","value","bypassEnabled"],"sources":["/workspaces/app-booking/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getAuth, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { app } from '../firebase';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\n// Configuration pour le mode bypass d'authentification\nconst BYPASS_AUTH = false; // Mettre à false pour activer l'authentification réelle\nconst TEST_USER = {\n  id: 'test-user-id',\n  email: 'test@example.com',\n  name: 'Utilisateur Test',\n  role: 'admin'\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(BYPASS_AUTH ? TEST_USER : null);\n  const [isAuthenticated, setIsAuthenticated] = useState(BYPASS_AUTH);\n  const [loading, setLoading] = useState(!BYPASS_AUTH);\n  const [error, setError] = useState(null);\n  const auth = getAuth(app);\n\n  useEffect(() => {\n    if (BYPASS_AUTH) {\n      console.log('Mode bypass d\\'authentification activé - Authentification simulée');\n      return;\n    }\n\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // Utilisateur connecté\n        setCurrentUser({\n          id: user.uid,\n          email: user.email,\n          name: user.displayName || user.email.split('@')[0],\n          role: 'admin' // Par défaut, tous les utilisateurs sont admin pour l'instant\n        });\n        setIsAuthenticated(true);\n      } else {\n        // Utilisateur déconnecté\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n      }\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, [auth]);\n\n  const login = async (email, password) => {\n    if (BYPASS_AUTH) {\n      console.log('Mode bypass d\\'authentification activé - Login simulé');\n      setCurrentUser(TEST_USER);\n      setIsAuthenticated(true);\n      setError(null);\n      return true;\n    }\n\n    try {\n      setLoading(true);\n      await signInWithEmailAndPassword(auth, email, password);\n      setError(null);\n      return true;\n    } catch (error) {\n      console.error('Erreur de connexion:', error);\n      setError(error.message);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    if (BYPASS_AUTH) {\n      console.log('Mode bypass d\\'authentification activé - Logout ignoré');\n      return;\n    }\n\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion:', error);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <AuthContext.Provider value={{ \n        currentUser, \n        isAuthenticated, \n        loading, \n        error, \n        login, \n        logout,\n        bypassEnabled: BYPASS_AUTH\n      }}>\n        {children}\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,OAAO,CAAEC,0BAA0B,CAAEC,OAAO,CAAEC,kBAAkB,KAAQ,eAAe,CAChG,OAASC,GAAG,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElC,KAAM,CAAAC,WAAW,cAAGX,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAY,OAAO,CAAGA,CAAA,GAAMV,UAAU,CAACS,WAAW,CAAC,CAEpD;AACA,KAAM,CAAAE,WAAW,CAAG,KAAK,CAAE;AAC3B,KAAM,CAAAC,SAAS,CAAG,CAChBC,EAAE,CAAE,cAAc,CAClBC,KAAK,CAAE,kBAAkB,CACzBC,IAAI,CAAE,kBAAkB,CACxBC,IAAI,CAAE,OACR,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGtB,QAAQ,CAACY,WAAW,CAAGC,SAAS,CAAG,IAAI,CAAC,CAC9E,KAAM,CAACU,eAAe,CAAEC,kBAAkB,CAAC,CAAGxB,QAAQ,CAACY,WAAW,CAAC,CACnE,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAG1B,QAAQ,CAAC,CAACY,WAAW,CAAC,CACpD,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAG5B,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAA6B,IAAI,CAAG1B,OAAO,CAACI,GAAG,CAAC,CAEzBL,SAAS,CAAC,IAAM,CACd,GAAIU,WAAW,CAAE,CACfkB,OAAO,CAACC,GAAG,CAAC,mEAAmE,CAAC,CAChF,OACF,CAEA,KAAM,CAAAC,WAAW,CAAG1B,kBAAkB,CAACuB,IAAI,CAAGI,IAAI,EAAK,CACrD,GAAIA,IAAI,CAAE,CACR;AACAX,cAAc,CAAC,CACbR,EAAE,CAAEmB,IAAI,CAACC,GAAG,CACZnB,KAAK,CAAEkB,IAAI,CAAClB,KAAK,CACjBC,IAAI,CAAEiB,IAAI,CAACE,WAAW,EAAIF,IAAI,CAAClB,KAAK,CAACqB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAClDnB,IAAI,CAAE,OAAQ;AAChB,CAAC,CAAC,CACFO,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,IAAM,CACL;AACAF,cAAc,CAAC,IAAI,CAAC,CACpBE,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACAE,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CAEF,MAAO,IAAMM,WAAW,CAAC,CAAC,CAC5B,CAAC,CAAE,CAACH,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAQ,KAAK,CAAG,KAAAA,CAAOtB,KAAK,CAAEuB,QAAQ,GAAK,CACvC,GAAI1B,WAAW,CAAE,CACfkB,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC,CACpET,cAAc,CAACT,SAAS,CAAC,CACzBW,kBAAkB,CAAC,IAAI,CAAC,CACxBI,QAAQ,CAAC,IAAI,CAAC,CACd,MAAO,KAAI,CACb,CAEA,GAAI,CACFF,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAtB,0BAA0B,CAACyB,IAAI,CAAEd,KAAK,CAAEuB,QAAQ,CAAC,CACvDV,QAAQ,CAAC,IAAI,CAAC,CACd,MAAO,KAAI,CACb,CAAE,MAAOD,KAAK,CAAE,CACdG,OAAO,CAACH,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC,CACvB,MAAO,MAAK,CACd,CAAC,OAAS,CACRb,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAc,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI5B,WAAW,CAAE,CACfkB,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC,CACrE,OACF,CAEA,GAAI,CACF,KAAM,CAAA1B,OAAO,CAACwB,IAAI,CAAC,CACrB,CAAE,MAAOF,KAAK,CAAE,CACdG,OAAO,CAACH,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACxD,CACF,CAAC,CAED,mBACElB,IAAA,CAACX,KAAK,CAAC2C,QAAQ,EAAArB,QAAA,cACbX,IAAA,CAACC,WAAW,CAACgC,QAAQ,EAACC,KAAK,CAAE,CAC3BtB,WAAW,CACXE,eAAe,CACfE,OAAO,CACPE,KAAK,CACLU,KAAK,CACLG,MAAM,CACNI,aAAa,CAAEhC,WACjB,CAAE,CAAAQ,QAAA,CACCA,QAAQ,CACW,CAAC,CACT,CAAC,CAErB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}