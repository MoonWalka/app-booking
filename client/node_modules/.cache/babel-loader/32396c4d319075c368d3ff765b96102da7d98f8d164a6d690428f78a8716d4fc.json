{"ast":null,"code":"import{db}from'../firebase';import{collection,getDocs,doc,getDoc,addDoc,updateDoc,deleteDoc}from'firebase/firestore';// Récupérer tous les contrats\nexport const getAllContracts=async()=>{try{const contractsCollection=collection(db,'contracts');const contractsSnapshot=await getDocs(contractsCollection);return contractsSnapshot.docs.map(doc=>({id:doc.id,...doc.data()}));}catch(error){console.error(\"Erreur lors de la récupération des contrats:\",error);return[];}};// Récupérer un contrat par ID\nexport const getContractById=async id=>{try{const contractDoc=doc(db,'contracts',id);const contractSnapshot=await getDoc(contractDoc);if(contractSnapshot.exists()){return{id:contractSnapshot.id,...contractSnapshot.data()};}else{console.log(\"Aucun contrat trouvé avec cet ID\");return null;}}catch(error){console.error(\"Erreur lors de la récupération du contrat:\",error);return null;}};// Créer un nouveau contrat\nexport const createContract=async contractData=>{try{const contractsCollection=collection(db,'contracts');const docRef=await addDoc(contractsCollection,{...contractData,createdAt:new Date()});return{id:docRef.id,...contractData};}catch(error){console.error(\"Erreur lors de la création du contrat:\",error);throw error;}};// Mettre à jour un contrat\nexport const updateContract=async(id,contractData)=>{try{const contractDoc=doc(db,'contracts',id);await updateDoc(contractDoc,{...contractData,updatedAt:new Date()});return{id,...contractData};}catch(error){console.error(\"Erreur lors de la mise à jour du contrat:\",error);throw error;}};// Supprimer un contrat\nexport const deleteContract=async id=>{try{const contractDoc=doc(db,'contracts',id);await deleteDoc(contractDoc);return true;}catch(error){console.error(\"Erreur lors de la suppression du contrat:\",error);return false;}};","map":{"version":3,"names":["db","collection","getDocs","doc","getDoc","addDoc","updateDoc","deleteDoc","getAllContracts","contractsCollection","contractsSnapshot","docs","map","id","data","error","console","getContractById","contractDoc","contractSnapshot","exists","log","createContract","contractData","docRef","createdAt","Date","updateContract","updatedAt","deleteContract"],"sources":["/workspaces/app-booking/client/src/services/contractsService.js"],"sourcesContent":["import { db } from '../firebase';\nimport { collection, getDocs, doc, getDoc, addDoc, updateDoc, deleteDoc } from 'firebase/firestore';\n\n// Récupérer tous les contrats\nexport const getAllContracts = async () => {\n  try {\n    const contractsCollection = collection(db, 'contracts');\n    const contractsSnapshot = await getDocs(contractsCollection);\n    return contractsSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération des contrats:\", error);\n    return [];\n  }\n};\n\n// Récupérer un contrat par ID\nexport const getContractById = async (id) => {\n  try {\n    const contractDoc = doc(db, 'contracts', id);\n    const contractSnapshot = await getDoc(contractDoc);\n    \n    if (contractSnapshot.exists()) {\n      return {\n        id: contractSnapshot.id,\n        ...contractSnapshot.data()\n      };\n    } else {\n      console.log(\"Aucun contrat trouvé avec cet ID\");\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Erreur lors de la récupération du contrat:\", error);\n    return null;\n  }\n};\n\n// Créer un nouveau contrat\nexport const createContract = async (contractData) => {\n  try {\n    const contractsCollection = collection(db, 'contracts');\n    const docRef = await addDoc(contractsCollection, {\n      ...contractData,\n      createdAt: new Date()\n    });\n    \n    return {\n      id: docRef.id,\n      ...contractData\n    };\n  } catch (error) {\n    console.error(\"Erreur lors de la création du contrat:\", error);\n    throw error;\n  }\n};\n\n// Mettre à jour un contrat\nexport const updateContract = async (id, contractData) => {\n  try {\n    const contractDoc = doc(db, 'contracts', id);\n    await updateDoc(contractDoc, {\n      ...contractData,\n      updatedAt: new Date()\n    });\n    \n    return {\n      id,\n      ...contractData\n    };\n  } catch (error) {\n    console.error(\"Erreur lors de la mise à jour du contrat:\", error);\n    throw error;\n  }\n};\n\n// Supprimer un contrat\nexport const deleteContract = async (id) => {\n  try {\n    const contractDoc = doc(db, 'contracts', id);\n    await deleteDoc(contractDoc);\n    return true;\n  } catch (error) {\n    console.error(\"Erreur lors de la suppression du contrat:\", error);\n    return false;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}