{"ast":null,"code":"import React,{useState,useEffect,Suspense}from'react';import{Link}from'react-router-dom';import{getConcerts}from'../../services/concertsService';import{getArtists}from'../../services/artistsService';// Importation CSS supprimée pour éviter les erreurs\n// Importation dynamique du tableau de bord\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConcertsDashboard=/*#__PURE__*/React.lazy(()=>import('./ConcertsDashboard'));const ConcertsList=()=>{const[concerts,setConcerts]=useState([]);const[artists,setArtists]=useState({});const[loading,setLoading]=useState(true);const[showDashboard,setShowDashboard]=useState(false);useEffect(()=>{const fetchData=async()=>{try{// Récupérer les artistes et créer un mapping par ID\nconst artistsData=await getArtists();const artistsMap={};artistsData.forEach(artist=>{artistsMap[artist.id]=artist;});setArtists(artistsMap);// Récupérer les concerts\nconst concertsData=await getConcerts();// Enrichir les concerts avec les noms d'artistes\nconst enrichedConcerts=concertsData.map(concert=>{const artistId=concert.artistId;const artist=artistId&&artistsMap[artistId]?artistsMap[artistId].name:'Artiste inconnu';// Formater la date correctement\nlet formattedDate='Date non spécifiée';if(concert.date){const date=new Date(concert.date);if(!isNaN(date.getTime())){formattedDate=date.toLocaleDateString('fr-FR',{day:'2-digit',month:'2-digit',year:'numeric',hour:'2-digit',minute:'2-digit'});}}return{...concert,artist,formattedDate};});setConcerts(enrichedConcerts||[]);setLoading(false);}catch(error){console.error(\"Erreur lors du chargement des données:\",error);setLoading(false);}};fetchData();},[]);const toggleView=()=>{setShowDashboard(!showDashboard);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Chargement des concerts...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"concerts-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Gestion des concerts\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"concerts-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:`view-toggle-btn ${showDashboard?'active':''}`,onClick:toggleView,children:showDashboard?'Vue liste':'Vue tableau de bord'}),/*#__PURE__*/_jsx(Link,{to:\"/concerts/add\",className:\"add-concert-btn\",children:\"Ajouter un concert\"})]}),showDashboard?/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Chargement du tableau de bord...\"}),children:/*#__PURE__*/_jsx(ConcertsDashboard,{concerts:concerts})}):/*#__PURE__*/_jsxs(\"div\",{className:\"concerts-list\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Liste des concerts (\",concerts.length,\")\"]}),/*#__PURE__*/_jsxs(\"table\",{className:\"concerts-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Artiste\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Lieu\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Ville\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Statut\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:concerts.length>0?concerts.map(concert=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:concert.artist||'Artiste inconnu'}),/*#__PURE__*/_jsx(\"td\",{children:concert.formattedDate||concert.date||'Non spécifiée'}),/*#__PURE__*/_jsx(\"td\",{children:concert.venue||'Non spécifié'}),/*#__PURE__*/_jsx(\"td\",{children:concert.city||'Non spécifiée'}),/*#__PURE__*/_jsx(\"td\",{children:concert.status||'En attente'}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:`/concerts/${concert.id}`,className:\"view-btn\",children:\"Voir\"})})]},concert.id)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"6\",className:\"no-data\",children:\"Aucun concert trouv\\xE9\"})})})]})]})]});};export default ConcertsList;","map":{"version":3,"names":["React","useState","useEffect","Suspense","Link","getConcerts","getArtists","jsx","_jsx","jsxs","_jsxs","ConcertsDashboard","lazy","ConcertsList","concerts","setConcerts","artists","setArtists","loading","setLoading","showDashboard","setShowDashboard","fetchData","artistsData","artistsMap","forEach","artist","id","concertsData","enrichedConcerts","map","concert","artistId","name","formattedDate","date","Date","isNaN","getTime","toLocaleDateString","day","month","year","hour","minute","error","console","toggleView","className","children","onClick","to","fallback","length","venue","city","status","colSpan"],"sources":["/workspaces/app-booking/client/src/components/concerts/ConcertsList.js"],"sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getConcerts } from '../../services/concertsService';\nimport { getArtists } from '../../services/artistsService';\n// Importation CSS supprimée pour éviter les erreurs\n\n// Importation dynamique du tableau de bord\nconst ConcertsDashboard = React.lazy(() => import('./ConcertsDashboard'));\n\nconst ConcertsList = () => {\n  const [concerts, setConcerts] = useState([]);\n  const [artists, setArtists] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [showDashboard, setShowDashboard] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Récupérer les artistes et créer un mapping par ID\n        const artistsData = await getArtists();\n        const artistsMap = {};\n        artistsData.forEach(artist => {\n          artistsMap[artist.id] = artist;\n        });\n        setArtists(artistsMap);\n        \n        // Récupérer les concerts\n        const concertsData = await getConcerts();\n        \n        // Enrichir les concerts avec les noms d'artistes\n        const enrichedConcerts = concertsData.map(concert => {\n          const artistId = concert.artistId;\n          const artist = artistId && artistsMap[artistId] ? artistsMap[artistId].name : 'Artiste inconnu';\n          \n          // Formater la date correctement\n          let formattedDate = 'Date non spécifiée';\n          if (concert.date) {\n            const date = new Date(concert.date);\n            if (!isNaN(date.getTime())) {\n              formattedDate = date.toLocaleDateString('fr-FR', {\n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit'\n              });\n            }\n          }\n          \n          return {\n            ...concert,\n            artist,\n            formattedDate\n          };\n        });\n        \n        setConcerts(enrichedConcerts || []);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des données:\", error);\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, []);\n\n  const toggleView = () => {\n    setShowDashboard(!showDashboard);\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Chargement des concerts...</div>;\n  }\n\n  return (\n    <div className=\"concerts-container\">\n      <h1>Gestion des concerts</h1>\n      \n      <div className=\"concerts-actions\">\n        <button \n          className={`view-toggle-btn ${showDashboard ? 'active' : ''}`} \n          onClick={toggleView}\n        >\n          {showDashboard ? 'Vue liste' : 'Vue tableau de bord'}\n        </button>\n        \n        <Link to=\"/concerts/add\" className=\"add-concert-btn\">\n          Ajouter un concert\n        </Link>\n      </div>\n      \n      {showDashboard ? (\n        <Suspense fallback={<div className=\"loading\">Chargement du tableau de bord...</div>}>\n          <ConcertsDashboard concerts={concerts} />\n        </Suspense>\n      ) : (\n        <div className=\"concerts-list\">\n          <h2>Liste des concerts ({concerts.length})</h2>\n          \n          <table className=\"concerts-table\">\n            <thead>\n              <tr>\n                <th>Artiste</th>\n                <th>Date</th>\n                <th>Lieu</th>\n                <th>Ville</th>\n                <th>Statut</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {concerts.length > 0 ? (\n                concerts.map((concert) => (\n                  <tr key={concert.id}>\n                    <td>{concert.artist || 'Artiste inconnu'}</td>\n                    <td>{concert.formattedDate || concert.date || 'Non spécifiée'}</td>\n                    <td>{concert.venue || 'Non spécifié'}</td>\n                    <td>{concert.city || 'Non spécifiée'}</td>\n                    <td>{concert.status || 'En attente'}</td>\n                    <td>\n                      <Link to={`/concerts/${concert.id}`} className=\"view-btn\">\n                        Voir\n                      </Link>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\" className=\"no-data\">Aucun concert trouvé</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConcertsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}