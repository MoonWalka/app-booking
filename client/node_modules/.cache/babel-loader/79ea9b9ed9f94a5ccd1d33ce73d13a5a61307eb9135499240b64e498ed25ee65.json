{"ast":null,"code":"import React,{useState,useEffect}from'react';import{db}from'../../firebase';import{collection,getDocs}from'firebase/firestore';import'./TestFirebaseIntegration.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TestFirebaseIntegration=()=>{const[testResults,setTestResults]=useState({artistsCollection:{exists:false,count:0},programmersCollection:{exists:false,count:0},concertsCollection:{exists:false,count:0},error:null,loading:true});useEffect(()=>{const testFirebaseCollections=async()=>{try{// Test de la collection artists\nlet snapshot=await getDocs(collection(db,'artists'));const artistsExists=!snapshot.empty;const artistsCount=snapshot.size;// Test de la collection programmers\nsnapshot=await getDocs(collection(db,'programmers'));const programmersExists=!snapshot.empty;const programmersCount=snapshot.size;// Test de la collection concerts\nsnapshot=await getDocs(collection(db,'concerts'));const concertsExists=!snapshot.empty;const concertsCount=snapshot.size;setTestResults({artistsCollection:{exists:artistsExists,count:artistsCount},programmersCollection:{exists:programmersExists,count:programmersCount},concertsCollection:{exists:concertsExists,count:concertsCount},error:null,loading:false});}catch(error){console.error(\"Erreur lors du test des collections Firebase:\",error);setTestResults({artistsCollection:{exists:false,count:0},programmersCollection:{exists:false,count:0},concertsCollection:{exists:false,count:0},error:error.message,loading:false});}};testFirebaseCollections();},[]);const renderStatus=collection=>{if(testResults.loading)return/*#__PURE__*/_jsx(\"span\",{className:\"status loading\",children:\"V\\xE9rification...\"});if(testResults.error)return/*#__PURE__*/_jsx(\"span\",{className:\"status error\",children:\"Erreur\"});if(collection.exists)return/*#__PURE__*/_jsxs(\"span\",{className:\"status success\",children:[\"Existe (\",collection.count,\" \\xE9l\\xE9ments)\"]});return/*#__PURE__*/_jsx(\"span\",{className:\"status warning\",children:\"N'existe pas\"});};return/*#__PURE__*/_jsxs(\"div\",{className:\"test-firebase-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Test d'int\\xE9gration Firebase\"}),testResults.error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Erreur de connexion \\xE0 Firebase\"}),/*#__PURE__*/_jsx(\"p\",{children:testResults.error}),/*#__PURE__*/_jsx(\"p\",{children:\"Mode de contournement d'authentification activ\\xE9. Les donn\\xE9es simul\\xE9es seront utilis\\xE9es.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-results\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\xC9tat des collections Firebase\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"collection-status\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Collection \\\"artists\\\"\"}),renderStatus(testResults.artistsCollection),/*#__PURE__*/_jsx(\"p\",{children:\"Cette collection stocke les informations sur les artistes.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"collection-status\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Collection \\\"programmers\\\"\"}),renderStatus(testResults.programmersCollection),/*#__PURE__*/_jsx(\"p\",{children:\"Cette collection stocke les informations sur les programmateurs.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"collection-status\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Collection \\\"concerts\\\"\"}),renderStatus(testResults.concertsCollection),/*#__PURE__*/_jsx(\"p\",{children:\"Cette collection stocke les informations sur les concerts.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Informations sur le mode de test\"}),/*#__PURE__*/_jsx(\"p\",{children:\"L'application est configur\\xE9e pour fonctionner m\\xEAme en cas d'erreur d'authentification Firebase. Si les collections n'existent pas ou si l'authentification \\xE9choue, des donn\\xE9es simul\\xE9es seront utilis\\xE9es.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Pour cr\\xE9er les collections automatiquement, utilisez les formulaires d'ajout dans les pages correspondantes :\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Ajoutez un artiste depuis la page Artistes\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Ajoutez un programmateur depuis la page Programmateurs\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Ajoutez un concert depuis la page Concerts\"})]})]})]});};export default TestFirebaseIntegration;","map":{"version":3,"names":["React","useState","useEffect","db","collection","getDocs","jsx","_jsx","jsxs","_jsxs","TestFirebaseIntegration","testResults","setTestResults","artistsCollection","exists","count","programmersCollection","concertsCollection","error","loading","testFirebaseCollections","snapshot","artistsExists","empty","artistsCount","size","programmersExists","programmersCount","concertsExists","concertsCount","console","message","renderStatus","className","children"],"sources":["/workspaces/app-booking/client/src/components/tests/TestFirebaseIntegration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../../firebase';\nimport { collection, getDocs } from 'firebase/firestore';\nimport './TestFirebaseIntegration.css';\n\nconst TestFirebaseIntegration = () => {\n  const [testResults, setTestResults] = useState({\n    artistsCollection: { exists: false, count: 0 },\n    programmersCollection: { exists: false, count: 0 },\n    concertsCollection: { exists: false, count: 0 },\n    error: null,\n    loading: true\n  });\n\n  useEffect(() => {\n    const testFirebaseCollections = async () => {\n      try {\n        // Test de la collection artists\n        let snapshot = await getDocs(collection(db, 'artists'));\n        const artistsExists = !snapshot.empty;\n        const artistsCount = snapshot.size;\n\n        // Test de la collection programmers\n        snapshot = await getDocs(collection(db, 'programmers'));\n        const programmersExists = !snapshot.empty;\n        const programmersCount = snapshot.size;\n\n        // Test de la collection concerts\n        snapshot = await getDocs(collection(db, 'concerts'));\n        const concertsExists = !snapshot.empty;\n        const concertsCount = snapshot.size;\n\n        setTestResults({\n          artistsCollection: { exists: artistsExists, count: artistsCount },\n          programmersCollection: { exists: programmersExists, count: programmersCount },\n          concertsCollection: { exists: concertsExists, count: concertsCount },\n          error: null,\n          loading: false\n        });\n      } catch (error) {\n        console.error(\"Erreur lors du test des collections Firebase:\", error);\n        setTestResults({\n          artistsCollection: { exists: false, count: 0 },\n          programmersCollection: { exists: false, count: 0 },\n          concertsCollection: { exists: false, count: 0 },\n          error: error.message,\n          loading: false\n        });\n      }\n    };\n\n    testFirebaseCollections();\n  }, []);\n\n  const renderStatus = (collection) => {\n    if (testResults.loading) return <span className=\"status loading\">Vérification...</span>;\n    if (testResults.error) return <span className=\"status error\">Erreur</span>;\n    if (collection.exists) return <span className=\"status success\">Existe ({collection.count} éléments)</span>;\n    return <span className=\"status warning\">N'existe pas</span>;\n  };\n\n  return (\n    <div className=\"test-firebase-container\">\n      <h1>Test d'intégration Firebase</h1>\n      \n      {testResults.error && (\n        <div className=\"error-message\">\n          <h3>Erreur de connexion à Firebase</h3>\n          <p>{testResults.error}</p>\n          <p>Mode de contournement d'authentification activé. Les données simulées seront utilisées.</p>\n        </div>\n      )}\n\n      <div className=\"test-results\">\n        <h2>État des collections Firebase</h2>\n        \n        <div className=\"collection-status\">\n          <h3>Collection \"artists\"</h3>\n          {renderStatus(testResults.artistsCollection)}\n          <p>Cette collection stocke les informations sur les artistes.</p>\n        </div>\n        \n        <div className=\"collection-status\">\n          <h3>Collection \"programmers\"</h3>\n          {renderStatus(testResults.programmersCollection)}\n          <p>Cette collection stocke les informations sur les programmateurs.</p>\n        </div>\n        \n        <div className=\"collection-status\">\n          <h3>Collection \"concerts\"</h3>\n          {renderStatus(testResults.concertsCollection)}\n          <p>Cette collection stocke les informations sur les concerts.</p>\n        </div>\n      </div>\n\n      <div className=\"test-info\">\n        <h2>Informations sur le mode de test</h2>\n        <p>\n          L'application est configurée pour fonctionner même en cas d'erreur d'authentification Firebase.\n          Si les collections n'existent pas ou si l'authentification échoue, des données simulées seront utilisées.\n        </p>\n        <p>\n          Pour créer les collections automatiquement, utilisez les formulaires d'ajout dans les pages correspondantes :\n        </p>\n        <ul>\n          <li>Ajoutez un artiste depuis la page Artistes</li>\n          <li>Ajoutez un programmateur depuis la page Programmateurs</li>\n          <li>Ajoutez un concert depuis la page Concerts</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TestFirebaseIntegration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}